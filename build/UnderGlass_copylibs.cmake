# Generated Script file
include(GetPrerequisites)
set(source_libs "E:/Dropbox/Under Glass/lib/SDL2/win32/SDL2.lib;E:/Dropbox/Under Glass/lib/SDL2/win32/SDL2main.lib;/Dropbox/Under Glass/lib/FBX_SDK_2015.1/lib/vs2012/x86/release/libfbxsdk-md.lib;/Dropbox/Under Glass/lib/FBX_SDK_2015.1/lib/vs2012/x86/debug/libfbxsdk-md.lib")
set(extra_libs "")

if (APPLE) # an OS X Bundle
  include(BundleUtilities)
  get_bundle_and_executable("${BUNDLE_APP}" bundle executable valid)
  if(valid)
    set(dest "${bundle}/Contents/Frameworks")
    get_prerequisites(${executable} lib_list 1 0 "" "")
    foreach(lib ${lib_list})
      get_filename_component(lib_file "${lib}" NAME)
      foreach(slib ${source_libs})
         get_filename_component(slib_file "${slib}" NAME)
         if(lib_file STREQUAL slib_file)
           file(COPY "${slib}" DESTINATION "${dest}")
         endif()
      endforeach()
    endforeach()
  else()
    message(ERROR "App Not found? ${BUNDLE_APP}")
  endif()
else() # Not an OS X bundle
  set(executable "${BUNDLE_APP}")
  get_filename_component(executable_dir "${executable}" DIRECTORY)
  get_prerequisites(${executable} lib_list 1 0 "" "")
  set(dest ${executable_dir}/${LIB_RPATH_DIR})
  file(MAKE_DIRECTORY ${dest})
  set(_skipreq OFF)
  foreach(lib ${lib_list} ${extra_libs})
    if(_skipreq)
      set(_skipreq OFF)
    elseif( (lib STREQUAL "debug" AND NOT USE_DEBUG) OR (lib STREQUAL "optimized" AND USE_DEBUG) )
      set(_skipreq ON)
    elseif( (lib STREQUAL "debug" AND USE_DEBUG) OR (lib STREQUAL "optimized" AND NOT USE_DEBUG) )
      # Splitting based on debug/optimized
    else()
      get_filename_component(lib_file "${lib}" NAME)
      set(_skip OFF)
      foreach(slib ${source_libs} ${extra_libs})
        if(_skip)
          set(_skip OFF)
        elseif( (slib STREQUAL "debug" AND NOT USE_DEBUG) OR (slib STREQUAL "optimized" AND USE_DEBUG) )
          set(_skip ON)
        elseif( (slib STREQUAL "debug" AND USE_DEBUG) OR (slib STREQUAL "optimized" AND NOT USE_DEBUG) )
          # Splitting based on debug/optimized
        else()
          get_filename_component(slib_file "${slib}" NAME)
          if(lib_file STREQUAL slib_file)
            message(STATUS "Copying library: ${lib_file}")
            execute_process(COMMAND ${CMAKE_COMMAND} -E copy "${slib}" "${dest}")
            break()
          else()
            get_filename_component(slib_dir "${slib}" PATH)
            set(slib_path "${slib_dir}/${lib_file}")
            if(EXISTS ${slib_path})
              message(STATUS "Copying library: ${lib_file}")
              execute_process(COMMAND ${CMAKE_COMMAND} -E copy "${slib_path}" "${dest}")
              break()
            endif()
          endif()
        endif()
      endforeach()
    endif()
  endforeach()
endif()
